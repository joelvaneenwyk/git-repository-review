name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

  test:
    needs: qa

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        platform: ["ubuntu", "macos", "windows"]

    runs-on: ${{ matrix.platform }}-latest

    steps:
      - uses: actions/checkout@v4

      - name: "üêç Setup Python"
        uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}

      - name: "‚ôªÔ∏è Setup cache"
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}-test-package

      - name: "‚öôÔ∏è Install Poetry"
        run: |
          python -m pip install poetry taskipy

      - name: "‚öôÔ∏è Install Dependencies"
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          PYTHON_ACTIVATE: ${{ matrix.platform != 'windows' && 'source .venv/bin/activate' || '.venv/Scripts/activate.ps1' }}
        run: |
          python -m venv .venv
          ${{ env.PYTHON_ACTIVATE }}
          poetry install
          deactivate

      - name: "üß™ Run Tests"
        env:
          PYTHON_ACTIVATE: ${{ matrix.platform != 'windows' && 'source .venv/bin/activate' || '.venv/Scripts/activate.ps1' }}
        run: |
          python -m venv .venv
          ${{ env.PYTHON_ACTIVATE }}
          task test
          deactivate

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: joelvaneenwyk/git-repository-review
          files: build/coverage.xml
